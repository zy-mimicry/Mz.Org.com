* Quick notes

** DONE [#B] 记录相关emacs的好的文档链接                      :Mzlink:emacs:
   CLOSED: [2018-01-01 一 17:48]

   - org agenda links:
     - https://beta.orgmode.org/manual/Template-elements.html#Template-elements
     - https://beta.orgmode.org/manual/Template-expansion.html#Template-expansion
   - 使用org配置emacs的仓库的好例子
     - https://github.com/howardabrams/dot-files
   - 使用org写Journal的好文章
     - https://www.emacswiki.org/emacs/OrgJournal
     - http://www.howardism.org/Technical/Emacs/journaling-org.html
   - Emacs中文网
     - http://emacser.com/
   - Emacs博客汇总网站
     - http://planet.emacsen.org/
   - stackexchange about emacs
     - https://emacs.stackexchange.com/
   - reddit emacs topic
     - https://www.reddit.com/r/emacs/
   - Emacs WiKi
     - https://www.emacswiki.org/
   - org-mode 简明手册
     - http://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html#sec-4-4
   - chenbin 的博客
     - http://blog.csdn.net/redguardtoo/article/details/7222501/
   - zilongshanren emacs china org
     - http://book.emacs-china.org/
   - spacemacs documentation links for html
     - http://spacemacs.org/doc/DOCUMENTATION
  
  Date: [2018-01-01 一 17:31]

* Blog Ideas

* Quick notes

** TODO [#C] M.Org git repository                               :github:org:

   - https://github.com/zy-mimicry
  
  
  [2017-12-26 二 11:32]

** TODO [#C] Linux mount 函数解析                 :mount:command:linux:link:
  
   - http://blog.csdn.net/qq258711519/article/details/8090413

  [2017-12-26 二 16:58]

** TODO [#C] Linux restorecon 命令解析       :linux:restorecon:command:link:

   - http://cache.baiducontent.com/c?m=9d78d513d98316ee1eb0d4295c4b8b725e14de6c6691965768d5e0558e3b081d506694e57c7e574e85926b6776f31e1af7b06133715e60e0ca95d4&p=8d63c64ad49800ff57ee957c1b649f&newp=c3759a46d7c10eb50be296234959c6231610db2151d6d0176b82c825d7331b001c3bbfb423251207d2c1776200a94359e9f4307637012ba3dda5c91d9fb4c57479c73d&user=baidu&fm=sc&query=restorecon&qid=f33c408a0002c00f&p1=1
  
  [2017-12-26 二 17:37]

** Firehose invocation process                            :firehose:nonhlos:

Firehose codes

#+BEGIN_VERSE
sbl1_main_ctl
	>boot_hand_control_to_deviceprogrammer_lite_main
		>deviceprogrammer_entry
			>deviceprogrammer_zi_buffers
			>deviceprogrammer_init_hw
			>main_firehose
	>boot_config_process_bl -- > sbl1_config_table
		>boot_do_procedures(bl_shared_data, boot_config_entry->pre_procs)
			>(boot_procedure_func_type)sbl1_ddr_init
		>boot_do_procedures(bl_shared_data, boot_config_entry->pre_procs)
			>boot_hand_control_to_deviceprogrammer_ddr_main
				>deviceprogrammer_entry
					>deviceprogrammer_zi_buffers
					>deviceprogrammer_init_hw
						>initFirehoseProtocol
							>fh.validation_enabled = FALSE;
							>FIREHOSE_TX_BUFFER_SIZE = 4096
							>FIREHOSE_CHANNEL_BUFFER_SIZE = 0x100000
							>xmlInitReader
								>fh.xml_reader --> NULL and 0
							>xmlInitWriter
								>fh.xml_writer --> 
							>init_storage_device_struct
								>DEVICEPROGRAMMER_USE_DRIVENO = 0
							>firehoseResetValidationVariables
								>FIREHOSE_NUM_HASHES_IN_HASH_TABLE = 256
						>initFirehoseStorage
							>init_storage_device_hw --> emmc
								>nonhlos/firehose/build/ms/target.scons --> 这个文件中：打开yongzhong的log转储
								>init_storage_device_hw: lcd_printf
								>sdcc_handle_open -- > storedev
								>sdcc_handle_set_active_bootable_partition --> PARTITION_EMMC_USER
						>FALSE == isValidationMode() && TRUE == isAuthenticationEnabled()
							>fh.validation_enabled --> false
							>logMessage --> 就是写 xml文件的内容
								>writeChannel --> FEATURE_FIREHOSE_QUSB <- 这个没有定义
									>qhsusb_al_bulk_transmit 
										>packet_handle_outgoing_buf --> from buf to channel ???
									>qusb_al_bulk_poll --> This function polls the hardware for events.查询硬件事件
										>FEATURE_QHSUSB_SAHARA_DOWNLOAD_PIPO -> 没有定义
										>qhsusb_dcd_poll
											>qhsusb_dci_poll_events --> Check for any pending events (interrupts are disabled) and call the relevant callbacks
												>#define DCI_HWIO_IN(core, usb_reg) in_dword((usb_reg)) --> 简单的读取reg
												>这内部做了一些操作，都是关于USB的事件分析										
								>xmlWriterReset
									> xmlWriterMarkRollbackPoint -- RollBack 附在签名中，不允许版本回退
						>initFirehoseTransport -- Initialize USB transport >This function initializes the USB core and keeps polling until enumeration is complete.
							>qhsusb_al_bulk_init -- > 这里初始化firehose的传输层 -- 底层
					>main_firehose
						>readAndProcessXML
							>getNextPacket
								>recvNextPacket
									>readChannel -- 主要读取数据到buf中，并置位相应的标志
										>qhsusb_al_bulk_receive -- 这个才是读取的主要实现函数
											>packet_handle_incoming_buf
										>qhsusb_al_bulk_poll -- 没read成功才走这里
									>authenticateSignedHash
										>AuthenticateImage --> 这部分代码 安全组改动很多，可以参考看看
									>sendResponse <-- 这里就已经返回ACK了
						>processNextXMLTag
							>xmlGetToken
#+END_VERSE
  
  [2017-12-27 三 10:53]

** DONE [#C] Cpp & C中关于文件操作的文章                       :C:cpp:links:
   CLOSED: [2017-12-27 三 14:18]
   http://blog.csdn.net/freeking101/article/details/60959624

  [2017-12-27 三 14:17]

* Blog Ideas

